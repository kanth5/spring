<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                     http://www.springframework.org/schema/beans/spring-beans.xsd
                     http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- enable detection of @Autowired annotation -->

    <!-- Like the <context:component-scan> tag, the <context:annotation-config> tag can also detect dependency injection annotations,
    e.g., @Autowired and @Qualifier. But it cannot detect beans annotated with @Component and other stereotype annotations. If we are using
    the <context:annotation-config> tag, then we need to declare beans in the XML config file.
    -->

    <context:annotation-config />

    <!-- bean definitions -->
    <bean id="filter"
          class="io.datajek.spring.basics.movierecommendersystem.lesson14c.ContentBasedFilter" />

    <bean id="filter1"
          class="io.datajek.spring.basics.movierecommendersystem.lesson14c.CollaborativeFilter"/>

    <bean id="recommenderImpl"
          class="io.datajek.spring.basics.movierecommendersystem.lesson14c.RecommenderImplementation" />

</beans>